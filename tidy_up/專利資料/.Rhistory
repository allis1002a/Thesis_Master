lower <- aggregate(upper$class_num, list(upper$year,upper$class), length)
names(lower)[names(lower) == 'Group.1'] <- "year"
names(lower)[names(lower) == 'Group.2'] <- "class"
names(lower)[names(lower) == 'x'] <- "class_y_total"
lower
IO_pre = left_join(upper, lower, by=c("year" = "year", "class" = "class"))
IO_pre
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_pre = left_join(upper, lower, by=c("year" = "year", "class" = "class"))
IO_pre
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_pre$IO_Score <- 1-(IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
View(IO_pre)
lower <- aggregate(upper$class_num, list(upper$year,upper$class), sum)
names(lower)[names(lower) == 'Group.1'] <- "year"
names(lower)[names(lower) == 'Group.2'] <- "class"
names(lower)[names(lower) == 'x'] <- "class_y_total"
lower
IO_pre = left_join(upper, lower, by=c("year" = "year", "class" = "class"))
IO_pre
IO_pre$IO_Score <- 1-(IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
try <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
View(try)
IO_pre$IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
upper = read.csv('cpc_class_V1.csv', col.names =c('firm','year','class','class_num'))
upper
lower <- aggregate(upper$class_num, list(upper$year,upper$class), sum)
names(lower)[names(lower) == 'Group.1'] <- "year"
names(lower)[names(lower) == 'Group.2'] <- "class"
names(lower)[names(lower) == 'x'] <- "class_y_total"
lower
IO_pre = left_join(upper, lower, by=c("year" = "year", "class" = "class"))
IO_pre
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_pre$IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
IO_pre$IO_Score <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
IO_pre$IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
IO_Score_sum
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(lower)[names(lower) == 'Group.1'] <- "firm"
names(lower)[names(lower) == 'Group.2'] <- "year"
names(lower)[names(lower) == 'x'] <- "IO_Score_sum"
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("year" = "year", "class" = "class"))
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(lower)[names(lower) == 'Group.1'] <- "firm"
names(lower)[names(lower) == 'Group.2'] <- "year"
names(lower)[names(lower) == 'x'] <- "IO_Score_sum"
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(lower)[names(lower) == 'Group.1'] <- "firm"
names(lower)[names(lower) == 'Group.2'] <- "year"
names(lower)[names(lower) == 'x'] <- "IO_Score_sum"
IO_Score_sum
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.1'] <- "firm"
names(loIO_Score_sumwer)[names(IO_Score_sum) == 'Group.2'] <- "year"
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.1'] <- "firm"
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.2'] <- "year"
names(IO_Score_sum)[names(IO_Score_sum) == 'x'] <- "IO_Score_sum"
IO_Score_sum
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
View(IO_pre)
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
IO_pre$originarity <- 1-IO_pre$IO_Score_sum
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
IO_pre
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
upper = read.csv('cpc_class_V1.csv', col.names =c('firm','year','class','class_num'))
upper
lower <- aggregate(upper$class_num, list(upper$year,upper$class), sum)
names(lower)[names(lower) == 'Group.1'] <- "year"
names(lower)[names(lower) == 'Group.2'] <- "class"
names(lower)[names(lower) == 'x'] <- "class_y_total"
lower
IO_pre = left_join(upper, lower, by=c("year" = "year", "class" = "class"))
IO_pre
IO_pre$IO_Score <- (IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.1'] <- "firm"
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.2'] <- "year"
names(IO_Score_sum)[names(IO_Score_sum) == 'x'] <- "IO_Score_sum"
IO_Score_sum
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
IO_pre
IO_pre$originarity <- (1-(IO_pre$IO_Score_sum*1))
View(IO_pre)
IO_pre$IO_Score <- (1-IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.1'] <- "firm"
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.2'] <- "year"
names(IO_Score_sum)[names(IO_Score_sum) == 'x'] <- "IO_Score_sum"
IO_Score_sum
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
IO_pre
IO_pre
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
upper = read.csv('cpc_class_V1.csv', col.names =c('firm','year','class','class_num'))
upper
lower <- aggregate(upper$class_num, list(upper$year,upper$class), sum)
names(lower)[names(lower) == 'Group.1'] <- "year"
names(lower)[names(lower) == 'Group.2'] <- "class"
names(lower)[names(lower) == 'x'] <- "class_y_total"
lower
IO_pre = left_join(upper, lower, by=c("year" = "year", "class" = "class"))
IO_pre
IO_pre$IO_Score <- (1-IO_pre$class_num/IO_pre$class_y_total)^2
IO_pre
IO_Score_sum <- aggregate(IO_pre$IO_Score, list(IO_pre$firm,IO_pre$year), sum)
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.1'] <- "firm"
names(IO_Score_sum)[names(IO_Score_sum) == 'Group.2'] <- "year"
names(IO_Score_sum)[names(IO_Score_sum) == 'x'] <- "IO_Score_sum"
IO_Score_sum
IO_pre = left_join(IO_pre, IO_Score_sum, by=c("firm"= "firm","year" = "year"))
IO_pre
#匯出CSV檔
write.csv(IO_Score_sum,file="IO_Score_sum_V1.csv",row.names = F)
Ori_5 <- read_csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
View(Ori_5)
setwd("~/Desktop/論文/資料集/dataset/tidy_up/專利資料")
knitr::opts_chunk$set(echo = TRUE)
require(foreign)
require(plm)
require(lmtest)
library(dplyr)
library(lubridate)
library(readxl)
Ori_5 <- read.csv('Ori_5_V1.csv')
Ori_5 <- read.csv('Ori_5_V1.csv')
Ori_5 <- read_csv('Ori_5_V1.csv')
Ori_5 <- read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
IE_5 <- read.csv('IE_year_V2.csv')
require(foreign)
require(plm)
require(lmtest)
library(dplyr)
library(lubridate)
library(readxl)
Ori_5 <- read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
IE_5 <- read.csv('IE_year_V2.csv')
View(IE_5)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
financial = read.csv('財務資料_variables_final_V2.csv')
RD <- financial %>% select(Company.Name, datadate, Research.Development_Expense)
names(RD)[names(RD) == 'Company.Name'] <- "firm"
names(RD)[names(RD) == 'Research.Development_Expense'] <- "RD_expense"
RD$datadate <- ymd(RD$datadate)
RD$year <-year(RD$datadate)
##
RD$firm <- gsub("[[:punct:]]","",RD$firm)
RD$firm <- str_trim(RD$firm, side = c("left"))
patent_year_all = read.csv('patents_num_year_V2.csv', col.names =c('firm','year','patent_total'))
patent_year_all
IE_cp = inner_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_cp$firm %>% unique() %>% length() #70間符合
arrange(IE_cp, firm,year)
IE_pre = right_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_pre$firm %>% unique() %>% length() #96間符合
arrange(IE_pre, firm,year)
RD_5 = read_csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/RD_5_V3.csv')
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
financial = read.csv('財務資料_variables_final_V2.csv')
RD <- financial %>% select(Company.Name, datadate, Research.Development_Expense)
names(RD)[names(RD) == 'Company.Name'] <- "firm"
names(RD)[names(RD) == 'Research.Development_Expense'] <- "RD_expense"
RD$datadate <- ymd(RD$datadate)
RD$year <-year(RD$datadate)
##
RD$firm <- gsub("[[:punct:]]","",RD$firm)
RD$firm <- str_trim(RD$firm, side = c("left"))
patent_year_all = read.csv('patents_num_year_V2.csv', col.names =c('firm','year','patent_total'))
patent_year_all
IE_cp = inner_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_cp$firm %>% unique() %>% length() #70間符合
arrange(IE_cp, firm,year)
IE_pre = right_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_pre$firm %>% unique() %>% length() #96間符合
arrange(IE_pre, firm,year)
RD_5 = read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/RD_5_V3.csv')
RD_5_join = RD_5 %>% select(firm,RD_5_2016,RD_5_2017,RD_5_2018,RD_5_2019,RD_5_2020,RD_5_2021)
RD_5_join <-RD_5_join %>% pivot_longer(cols = RD_5_2016:RD_5_2021,names_to = 'year',values_to = 'RD_5')
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2016", "2016")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2017", "2017")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2018", "2018")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2019", "2019")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2020", "2020")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2021", "2021")
RD_5_join$year <- as.numeric(RD_5_join$year)
IE_pre = left_join(IE_pre, RD_5_join, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_pre
y_list = IE_pre$year %>% unique()
IE_year =data_frame()
for (y in y_list){
a <- IE_pre %>% filter(year==y) %>% mutate(IE = patent_total/RD_5)
IE_year <- rbind(IE_year, a)
}
IE_year = IE_year %>% group_by(firm) %>% arrange(firm,year)
IE_year[is.na(IE_year)] <- 0
IE_year
unique(RD$firm) %>% length()
unique(IE_pre$firm) %>% length()
unique(patent_year_all$firm) %>% length() #patent只有76家＝利用公司名單直接從資料庫抓下來的
# unique(cpc_year_all_sis$firm) %>% length()
cp_ok = inner_join(IE_pre, RD_5_join, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
cp_ok = inner_join(IE_pre, RD_5_join, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
unique(cp_ok$firm)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
financial = read.csv('財務資料_variables_final_V2.csv')
RD <- financial %>% select(Company.Name, datadate, Research.Development_Expense)
names(RD)[names(RD) == 'Company.Name'] <- "firm"
names(RD)[names(RD) == 'Research.Development_Expense'] <- "RD_expense"
RD$datadate <- ymd(RD$datadate)
RD$year <-year(RD$datadate)
##
RD$firm <- gsub("[[:punct:]]","",RD$firm)
RD$firm <- str_trim(RD$firm, side = c("left"))
patent_year_all = read.csv('patents_num_year_V2.csv', col.names =c('firm','year','patent_total'))
patent_year_all
IE_cp = inner_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_cp$firm %>% unique() %>% length() #70間符合
arrange(IE_cp, firm,year)
IE_pre = right_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_pre$firm %>% unique() %>% length() #96間符合
arrange(IE_pre, firm,year)
RD_5 = read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/RD_5_V3.csv')
RD_5_join = RD_5 %>% select(firm,RD_5_2016,RD_5_2017,RD_5_2018,RD_5_2019,RD_5_2020,RD_5_2021)
RD_5_join <-RD_5_join %>% pivot_longer(cols = RD_5_2016:RD_5_2021,names_to = 'year',values_to = 'RD_5')
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2016", "2016")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2017", "2017")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2018", "2018")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2019", "2019")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2020", "2020")
RD_5_join$year <- str_replace(RD_5_join$year, "RD_5_2021", "2021")
RD_5_join$year <- as.numeric(RD_5_join$year)
cp_ok = inner_join(IE_pre, RD_5_join, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
unique(cp_ok$firm)
library(dplyr)
library(lubridate)
library(tidyr)
library(stringr)
financial = read.csv('財務資料_variables_final_V2.csv')
RD <- financial %>% select(Company.Name, datadate, Research.Development_Expense)
names(RD)[names(RD) == 'Company.Name'] <- "firm"
names(RD)[names(RD) == 'Research.Development_Expense'] <- "RD_expense"
RD$datadate <- ymd(RD$datadate)
RD$year <-year(RD$datadate)
##
RD$firm <- gsub("[[:punct:]]","",RD$firm)
RD$firm <- str_trim(RD$firm, side = c("left"))
patent_year_all = read.csv('patents_num_year_V2.csv', col.names =c('firm','year','patent_total'))
patent_year_all
IE_cp = inner_join(patent_year_all, RD, by=c("firm" = "firm", "year" = "year"))  #以財務資料為基底，因年份為空值沒有關係
IE_cp$firm %>% unique() %>% length() #70間符合
arrange(IE_cp, firm,year)
IE_cp$firm %>% unique() #60間符合
combinecp_list <-  IE_cp$firm %>% unique() #60間符合
#匯出CSV檔
write.csv(combinecp_list,file="combinecp_list.csv",row.names = F)
Ori_5 <- read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
IE_5 <- read.csv('IE_year_V2.csv')
combinecp_list <- read.csv('combinecp_list.csv')
knitr::opts_chunk$set(echo = TRUE)
require(foreign)
require(plm)
require(lmtest)
library(dplyr)
library(lubridate)
library(readxl)
Ori_5 <- read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
IE_5 <- read.csv('IE_year_V2.csv')
combinecp_list <- read.csv('combinecp_list.csv')
View(combinecp_list)
View(IE_5)
View(Ori_5)
Ori_5 <- read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
IE_5 <- read.csv('IE_year_V2.csv')
combinecp_list <- read.csv('combinecp_list.csv')
financial = read.csv('財務資料_variables_final_V2.csv')
financial <- mutate(financial,YEAR=year(financial$datadate))
financial_data <- financial %>% select(Company.Name,YEAR, ROA_2021,OCF_2021,OCF_norm_2021,ROE_2021)
names(financial)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name"'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name"'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
names(Ori_5)
names(IE_5)
names(IE_5)
financial = read.csv('財務資料_variables_final_V2.csv')
financial <- mutate(financial,YEAR=year(financial$datadate))
financial_data <- financial %>% select(Company.Name,YEAR, ROA_2021,OCF_2021,OCF_norm_2021,ROE_2021)
names(financial)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name"'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
financial_data
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
financial_data
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
reg_pre
View(reg_pre)
names(Ori_5)
#整理IO資料
IO <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
IO
IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity') %>%
head()
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity') %>%
head()
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
View(financial_data)
knitr::opts_chunk$set(echo = TRUE)
require(foreign)
# require(plm)
require(lmtest)
library(dplyr)
library(lubridate)
library(readxl)
Ori_5 <- read.csv('~/Desktop/論文/資料集/dataset/tidy_up/財務資料/Ori_5_V1.csv')
IE_5 <- read.csv('IE_year_V2.csv')
combinecp_list <- read.csv('combinecp_list.csv')
names(Ori_5)
names(IE_5)
financial = read.csv('財務資料_variables_final_V2.csv')
financial <- mutate(financial,YEAR=year(financial$datadate))
financial_data <- financial %>% select(Company.Name,YEAR, ROA_2021,OCF_2021,OCF_norm_2021,ROE_2021)
names(financial)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
IO <- IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity')
names(IO)[names(IO) == 'Ori_5_2015'] <- "2015"
names(IO)[names(IO) == 'Ori_5_2016'] <- "2016"
names(IO)[names(IO) == 'Ori_5_2017'] <- "2017"
names(IO)[names(IO) == 'Ori_5_2018'] <- "2018"
names(IO)[names(IO) == 'Ori_5_2019'] <- "2019"
names(IO)[names(IO) == 'Ori_5_2020'] <- "2020"
names(IO)[names(IO) == 'Ori_5_2021'] <- "2021"
IO$year <- as.numeric(IO$year)
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
reg_pre = left_join(reg_pre, IE_5, by=c("firm" = "firm","year" = "year"))
View(IO)
IO <- IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity')
View(IO)
names(IO)[names(IO) == 'Ori_5_2015'] <- "2015"
names(IO)[names(IO) == 'Ori_5_2016'] <- "2016"
names(IO)[names(IO) == 'Ori_5_2017'] <- "2017"
names(IO)[names(IO) == 'Ori_5_2018'] <- "2018"
names(IO)[names(IO) == 'Ori_5_2019'] <- "2019"
names(IO)[names(IO) == 'Ori_5_2020'] <- "2020"
names(IO)[names(IO) == 'Ori_5_2021'] <- "2021"
View(IO)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
IO <- IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity')
IO <-names(IO)[names(IO) == 'Ori_5_2015'] <- "2015"
IO <-names(IO)[names(IO) == 'Ori_5_2016'] <- "2016"
IO <-names(IO)[names(IO) == 'Ori_5_2017'] <- "2017"
IO <-names(IO)[names(IO) == 'Ori_5_2018'] <- "2018"
IO <-names(IO)[names(IO) == 'Ori_5_2019'] <- "2019"
IO <-names(IO)[names(IO) == 'Ori_5_2020'] <- "2020"
IO <-names(IO)[names(IO) == 'Ori_5_2021'] <- "2021"
IO$year <- as.numeric(IO$year)
IO <- IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity')
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
names(IO_pre)[names(IO_pre) == 'Ori_5_2015'] <- "2015"
names(IO_pre)[names(IO_pre) == 'Ori_5_2016'] <- "2016"
names(IO_pre)[names(IO_pre) == 'Ori_5_2017'] <- "2017"
names(IO_pre)[names(IO_pre) == 'Ori_5_2018'] <- "2018"
names(IO_pre)[names(IO_pre) == 'Ori_5_2019'] <- "2019"
names(IO_pre)[names(IO_pre) == 'Ori_5_2020'] <- "2020"
names(IO_pre)[names(IO_pre) == 'Ori_5_2021'] <- "2021"
View(IO_pre)
IO <- IO_pre %>%
pivot_longer(cols = Ori_5_2015:Ori_5_2021,names_to = 'year',values_to = 'originarity')
IO <- IO_pre %>%
pivot_longer(cols = 2015:2021,names_to = 'year',values_to = 'originarity')
IO <- IO_pre %>%
pivot_longer(cols = `2015`:`2021`,names_to = 'year',values_to = 'originarity')
View(IO)
IO$year <- as.numeric(IO$year)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
names(IO_pre)[names(IO_pre) == 'Ori_5_2015'] <- "2015"
names(IO_pre)[names(IO_pre) == 'Ori_5_2016'] <- "2016"
names(IO_pre)[names(IO_pre) == 'Ori_5_2017'] <- "2017"
names(IO_pre)[names(IO_pre) == 'Ori_5_2018'] <- "2018"
names(IO_pre)[names(IO_pre) == 'Ori_5_2019'] <- "2019"
names(IO_pre)[names(IO_pre) == 'Ori_5_2020'] <- "2020"
names(IO_pre)[names(IO_pre) == 'Ori_5_2021'] <- "2021"
IO <- IO_pre %>%
pivot_longer(cols = `2015`:`2021`,names_to = 'year',values_to = 'originarity')
IO$year <- as.numeric(IO$year)
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
reg_pre = left_join(reg_pre, IO, by=c("firm" = "firm","year" = "year"))
View(reg_pre)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
names(IO_pre)[names(IO_pre) == 'Ori_5_2015'] <- "2015"
names(IO_pre)[names(IO_pre) == 'Ori_5_2016'] <- "2016"
names(IO_pre)[names(IO_pre) == 'Ori_5_2017'] <- "2017"
names(IO_pre)[names(IO_pre) == 'Ori_5_2018'] <- "2018"
names(IO_pre)[names(IO_pre) == 'Ori_5_2019'] <- "2019"
names(IO_pre)[names(IO_pre) == 'Ori_5_2020'] <- "2020"
names(IO_pre)[names(IO_pre) == 'Ori_5_2021'] <- "2021"
IO <- IO_pre %>%
pivot_longer(cols = `2015`:`2021`,names_to = 'year',values_to = 'originarity')
IO$year <- as.numeric(IO$year)
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
reg_pre = left_join(reg_pre, IO, by=c("firm" = "firm","year" = "year"))
reg_pre[is.na(reg_pre)] <- 0
View(reg_pre)
#整理財務資料的col_name
names(financial_data)[names(financial_data) == 'Company.Name'] <- "firm"
names(financial_data)[names(financial_data) == 'YEAR'] <- "year"
#整理IO資料
IO_pre <- Ori_5 %>% select(firm,Ori_5_2015,Ori_5_2016,Ori_5_2017,Ori_5_2018,Ori_5_2019,Ori_5_2020,Ori_5_2021)
names(IO_pre)[names(IO_pre) == 'Ori_5_2015'] <- "2015"
names(IO_pre)[names(IO_pre) == 'Ori_5_2016'] <- "2016"
names(IO_pre)[names(IO_pre) == 'Ori_5_2017'] <- "2017"
names(IO_pre)[names(IO_pre) == 'Ori_5_2018'] <- "2018"
names(IO_pre)[names(IO_pre) == 'Ori_5_2019'] <- "2019"
names(IO_pre)[names(IO_pre) == 'Ori_5_2020'] <- "2020"
names(IO_pre)[names(IO_pre) == 'Ori_5_2021'] <- "2021"
IO <- IO_pre %>%
pivot_longer(cols = `2015`:`2021`,names_to = 'year',values_to = 'originarity')
IO$year <- as.numeric(IO$year)
reg_pre = left_join(financial_data, IE_5, by=c("firm" = "firm","year" = "year"))
reg = left_join(reg_pre, IO, by=c("firm" = "firm","year" = "year"))
reg[is.na(reg)] <- 0
View(reg)
reg
fpmg_OCF <- pmg(OCF_2021 ~ originarity+IE+RD_5+patent_total, reg, index=c("firm","year"))  # 已補缺值，MS_Advertising,MS_SG.A 仍會出錯
install.packages('plm')
require(foreign)
require(plm)
require(lmtest)
library(dplyr)
library(lubridate)
library(readxl)
library(plm)
require(foreign)
library(plm)
require(foreign)
library(plm)
require(foreign)
library(pmg)
install.packages("pmg", dependencies=TRUE)
require(foreign)
library(pmg)
